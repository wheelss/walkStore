<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xzsd.pc.store.dao.StoresDao">

    <!--统计店长数量-->
    <select id="countUserId" parameterType="com.xzsd.pc.user.entity.UserInfo" resultType="int">
        select count(*)
        from t_sys_user
        where is_delete = 0
        and user_id= #{userId}
        and role = 2
    </select>

    <!--统计店长是否被使用-->
    <select id="countUserUsed" parameterType="com.xzsd.pc.store.entity.StoresInfo" resultType="int">
        select count(*)
        from t_info_store
        where is_delete = 0
        and user_id= #{userId}
        <if test="storeId != null and storeId != ''">
            and store_id != #{storeId}
        </if>
    </select>

    <!--新增门店-->
    <insert id="addStore" parameterType="com.xzsd.pc.store.entity.StoresInfo">
        insert into t_info_store
        (store_id,
        store_name,
        phone,
        user_id,
        business_code,
        province_id,
        city_id,
        area_id,
        address,
        is_delete,
        create_time,
        create_user,
        version,
        invite_code
        )
        values
        (#{storeId},
        #{storeName},
        #{phone},
        #{userId},
        #{businessCode},
        #{provinceId},
        #{cityId},
        #{areaId},
        #{address},
        0,
        now(),
        #{createUser},
        0,
        #{inviteCode})
    </insert>

    <!--获取门店信息-->
    <select id="getStore" parameterType="java.lang.String" resultType="com.xzsd.pc.store.entity.StoresInfo">
        select
            a.store_name storeName,
            a.phone phone,
            a.user_id userId,
            a.business_code businessCode,
            a.province_id provinceId,
            a.city_id cityId,
            a.area_id areaId,
            b.area_name provinceName,
            c.area_name cityName,
            d.area_name areaName,
            a.address address,
            e.user_name userName,
            a.inviteCode inviteCode,
            a.version
            a.store_id storeId
        from t_info_store a,
        t_info_area_level b,
        t_info_area_level c,
        t_info_area_level d,
        t_sys_user e
        where a.store_id = #{storeId}
        and a.is_delete = 0
        and a.province_id = b.area_id
        and a.city_id= c.area_id
        and a.area_id = d.area_id
        and a.user_id = e.user_id
    </select>

    <!--门店列表-->
    <select id="listStores" parameterType="com.xzsd.pc.store.entity.StoresInfo"
            resultType="com.xzsd.pc.store.entity.StoresInfo">
        select
        a.store_id storeId,
        a.store_name storeName,
        a.phone phone,
        a.address address,
        b.user_name userName,
        a.invite_code inviteCode,
        b.user_acct userAcct,
        a.version
        from t_info_store a,
        t_sys_user b
        where a.is_delete = 0
        and a.user_id = b.user_id
        <if test="storeId != null and storeId != ''">
            and a.store_id like concat('%', #{storeId}, '%')
        </if>
        <if test="storeName != null and storeName != ''">
            and a.store_name like concat('%', #{storeName}, '%')
        </if>
        <if test="userName != null and userName != ''">
            and b.user_name like concat('%', #{userName}, '%')
        </if>
        <if test="provinceId != null and provinceId != ''">
            and a.province_id like concat('%', #{provinceId}, '%')
        </if>
        <if test="cityId != null and cityId != ''">
            and a.city_id like concat('%', #{cityId}, '%')
        </if>
        <if test="areaId != null and areaId != ''">
            and a.area_id like concat('%', #{areaId}, '%')
        </if>
        order by a.update_time desc
    </select>

    <!--店长所在门店列表-->
    <select id="listStoresManger" parameterType="com.xzsd.pc.store.entity.StoresInfo"
            resultType="com.xzsd.pc.store.entity.StoresInfo">
        select
        a.store_id storeId,
        a.store_name storeName,
        a.phone phone,
        a.address address,
        b.user_name userName,
        a.invite_code inviteCode,
        b.user_acct userAcct,
        a.version
        from t_info_store a,
        t_sys_user b
        where a.is_delete = 0
        and a.user_id = b.user_id
        and a.user_id = #{userId}
        <if test="storeId != null and storeId != ''">
            and a.store_id like concat('%', #{storeId}, '%')
        </if>
        <if test="storeName != null and storeName != ''">
            and a.store_name like concat('%', #{storeName}, '%')
        </if>
        <if test="userName != null and userName != ''">
            and b.user_name like concat('%', #{userName}, '%')
        </if>
        <if test="provinceId != null and provinceId != ''">
            and a.province_id like concat('%', #{provinceId}, '%')
        </if>
        <if test="cityId != null and cityId != ''">
            and a.city_id like concat('%', #{cityId}, '%')
        </if>
        <if test="areaId != null and areaId != ''">
            and a.area_id like concat('%', #{areaId}, '%')
        </if>
        order by a.update_time desc
    </select>

    <!--修改商品信息-->
    <update id="updateStore" parameterType="com.xzsd.pc.store.entity.StoresInfo">
        update t_info_store
        set
            store_name = #{storeName},
            phone = #{phone},
            user_id = #{userId},
            business_code = #{businessCode},
            province_id = #{provinceId},
            city_id = #{cityId},
            area_id = #{areaId},
            address = #{address},
            update_time = now(),
            update_user = #{updateUser},
            version = version + 1
        where store_id = #{storeId}
        and version = #{version}
    </update>

    <!--删除门店-->
    <update id="deleteStore" parameterType="com.xzsd.pc.store.entity.StoresInfo">
        update t_info_store
        set
        is_delete = 1,
        update_time = now(),
        update_user = #{updateUser}
        where store_id in
        <foreach item="item" index="index" collection="listCode" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>
</mapper>