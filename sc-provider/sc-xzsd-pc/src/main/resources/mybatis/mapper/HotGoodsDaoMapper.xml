<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xzsd.pc.hotGoods.dao.HotGoodsDao">
    <!--统计排序数量-->
    <select id="countSort" parameterType="com.xzsd.pc.hotGoods.entity.HotGoodsInfo" resultType="int">
        select count(*)
        from t_info_hot_goods
        where is_delete = 0
        and hot_goods_num= #{hotGoodsNum}
        <if test="hotGoodsId != null and hotGoodsId != ''">
            and hot_goods_id != #{hotGoodsId}
        </if>
    </select>

    <!--统计商品数量-->
    <select id="countGood" parameterType="com.xzsd.pc.hotGoods.entity.HotGoodsInfo" resultType="int">
        select count(*)
        from t_info_hot_goods
        where is_delete = 0
        and goods_id= #{goodsId}
        <if test="hotGoodsId != null and hotGoodsId != ''">
            and hot_goods_id != #{hotGoodsId}
        </if>
    </select>

    <!--新增热门位商品-->
    <insert id="addHotGoods" parameterType="com.xzsd.pc.hotGoods.entity.HotGoodsInfo">
        insert into t_info_hot_goods
        (hot_goods_id,
        goods_id,
        hot_goods_num,
        is_delete,
        create_user,
        create_time,
        version
        )
        values
        (#{hotGoodsId},
        #{goodsId},
        #{hotGoodsNum},
        0,
        #{createUser},
        now(),
        0
        )
    </insert>

    <!--获取热门位商品信息-->
    <select id="getHotGoods" parameterType="java.lang.String" resultType="com.xzsd.pc.hotGoods.entity.HotGoodsInfo">
        select
           hot_goods_num hotGoodsNum,
           goods_id goodsId,
           version,
           hot_goods_id
        from t_info_hot_goods
        where hot_goods_id = #{hotGoodsId}
        and is_delete = 0
    </select>

    <!--热门位商品列表-->
    <select id="listHotGoods" parameterType="com.xzsd.pc.hotGoods.entity.HotGoodsInfo"
            resultType="com.xzsd.pc.hotGoods.entity.HotGoodsInfo">
        select
            b.hot_goods_num hotGoodsNum,
            b.goods_id goodsId,
            a.goods_name goodsName,
            a.goods_price goodsPrice,
            a.goods_describe goodsDescribe,
            b.hot_goods_id hotGoodsId,
            b.version
        from t_info_goods a,
             t_info_hot_goods b
        where b.is_delete = 0
        and a.goods_id = b.goods_id
        <if test="goodsName != null and goodsName != ''">
            and goods_name like concat('%', #{goodsName}, '%')
        </if>
        <if test="goodsId != null and goodsId != ''">
            and b.goods_id like concat('%', #{goodsId}, '%')
        </if>
        order by b.hot_goods_num desc
    </select>

    <!--修改热门位商品信息-->
    <update id="updateHotGoods" parameterType="com.xzsd.pc.hotGoods.entity.HotGoodsInfo">
        update t_info_hot_goods
        set
            goods_id = #{goodsId},
            hot_goods_num = #{hotGoodsNum},
            update_time = now(),
            update_user = #{updateUser},
            version = version + 1
        where hot_goods_id = #{hotGoodsId}
        and version = #{version}
    </update>

    <!--获取热门位商品展示数量-->
    <select id="getHotGoodsShowNum" resultType="com.xzsd.pc.hotGoods.entity.HotGoodsInfo">
        select
           public_type hotGoodsShowNum,
           version
        from t_sys_dictionary
        where dict_name = 'hot_goods_show_num'
    </select>

    <!--修改热门位商品展示数量-->
    <update id="updateHotGoodsShowNum" parameterType="com.xzsd.pc.hotGoods.entity.HotGoodsInfo">
        update t_sys_dictionary
        set
            public_type = #{hotGoodsShowNum},
            update_time = now(),
            update_user = #{updateUser},
            version = version + 1
        where
            dict_name = 'hot_goods_show_num'
        and version = #{version}
    </update>

    <!--删除热门位商品-->
    <update id="deleteHotGoods" parameterType="com.xzsd.pc.good.entity.GoodInfo">
        update t_info_hot_goods
        set
            is_delete = 1,
            update_time = now(),
            update_user = #{updateUser}
        where hot_goods_id in
        <foreach item="item" index="index" collection="listCode" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>

</mapper>