<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xzsd.pc.good.dao.GoodDao">
    <!--搜索轮播图表-->
    <select id="RgoodsIdList" parameterType="java.util.List" resultType="String">
        select
        goods_id
        from t_info_slideshow_home
        where is_delete = 0
        and goods_id in
        <foreach item="item" index="index" collection="listCode" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>
    <!--搜索热门位商品表-->
    <select id="HgoodsIdList" parameterType="java.util.List" resultType="String">
        select
        goods_id
        from t_info_hot_goods
        where is_delete = 0
        and goods_id in
        <foreach item="item" index="index" collection="listCode" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>
    <!--新增商品-->
    <insert id="addGoods" parameterType="com.xzsd.pc.good.entity.GoodInfo">
        insert into t_info_goods
        (goods_id,
        isbn,
        goods_name,
        one_classify_id,
        two_classify_id,
        goods_describe,
        supplier_name,
        goods_inventory,
        goods_original_cost,
        goods_price,
        goods_advertise,
        goods_image_path,
        goods_state_id,
        goods_views_num,
        goods_author,
        goods_press,
        goods_sales,
        is_delete,
        create_time,
        create_user,
        version,
        goods_shelf_time
        )
        values
        (#{goodsId},
        #{isbn},
        #{goodsName},
        #{oneClassifyId},
        #{twoClassifyId},
        #{goodsDescribe},
        #{supplierName},
        #{goodsInventory},
        #{goodsOriginalCost},
        #{goodsPrice},
        #{goodsAdvertise},
        #{imagePath},
        '3',
        0,
        #{goodsAuthor},
        #{goodsPress},
        0,
        0,
        now(),
        #{createUser},
        0,
        now()
        )
    </insert>

    <!--删除商品-->
    <update id="deleteGoods" parameterType="com.xzsd.pc.good.entity.GoodInfo">
        update t_info_goods
        set
            is_delete = 1,
            update_time = now(),
            update_user = #{updateUser}
        where goods_id in
        <foreach item="item" index="index" collection="listCode" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>

    <!--修改商品信息-->
    <update id="updateGoods" parameterType="com.xzsd.pc.good.entity.GoodInfo">
        update t_info_goods
        set
            goods_name = #{goodsName},
            isbn = #{isbn},
            one_classify_id = #{oneClassifyId},
            two_classify_id = #{twoClassifyId},
            goods_describe = #{goodsDescribe},
            supplier_name = #{supplierName},
            goods_inventory = #{goodsInventory},
            goods_original_cost = #{goodsOriginalCost},
            goods_price = #{goodsPrice},
            goods_advertise = #{goodsAdvertise},
            goods_image_path = #{imagePath},
            goods_author = #{goodsAuthor},
            goods_press = #{goodsPress},
            update_time = now(),
            update_user = #{updateUser},
            version = version + 1,
            is_delete = 0
        where goods_id = #{goodsId}
        and version = #{version}
    </update>

    <!--获取商品信息-->
    <select id="getGoods" parameterType="java.lang.String" resultType="com.xzsd.pc.good.entity.GoodInfo">
        select
            a.goods_name goodsName,
            a.isbn isbn,
            b.classify_name oneClassifyName,
            c.classify_name twoClassifyName,
            a.goods_describe goodsDescibe,
            a.supplier_name supplierName,
            a.goods_inventory goodsInventory,
            a.goods_original_cost goodsOriginalCost,
            a.goods_price goodsPrice,
            a.goods_advertise goodsAdvertise,
            a.goods_image_path goodsImagePath,
            a.goods_author goodsAuthor,
            a.goods_press goodsPress,
            a.version,
            a.goods_id goodsId
        from t_info_goods a,
             t_info_goods_classify b,
             t_info_goods_classify c
        where a.goods_id = #{goodsId}
        and a.is_delete = 0
        and a.one_classify_id = b.classify_id
        and a.two_classify_id = c.classify_id

    </select>


    <!--商品列表-->
    <select id="listGoodsPage" parameterType="com.xzsd.pc.good.entity.GoodInfo"
            resultType="com.xzsd.pc.good.entity.GoodInfo">
        select
            a.goods_name goodsName,
            a.goods_original_cost goodsOriginalCost,
            a.goods_price goodsPrice,
            a.goods_sales goodsSales,
            b.classify_name oneClassifyName,
            c.classify_name twoClassifyName,
            a.goods_advertise goodsAdvertise,
            a.goods_describe goodsDescibe,
            a.goods_state_id goodsStateId,
            a.goods_shelf_time goodsShelfTime,
            a.goods_views_num goodsViewsNum,
            a.supplier_name supplierName,
            a.goods_image_path goodsImagePath,
            a.goods_inventory goodsInventory,
            a.isbn,
            a.goods_id goodsId,
            a.version
        from t_info_goods a,
        t_info_goods_classify b,
        t_info_goods_classify c
        where a.is_delete = 0
        and a.one_classify_id = b.classify_id
        and a.two_classify_id = c.classify_id
        <if test="goodsName != null and goodsName != ''">
            and goods_name like concat('%', #{goodsName}, '%')
        </if>
        <if test="goodsAdvertise != null and goodsAdvertise != ''">
            and goods_advertise like concat('%', #{goodsAdvertise}, '%')
        </if>
        <if test="goodsAuthor != null and goodsAuthor != ''">
            and goods_author like concat('%', #{goodsAuthor}, '%')
        </if>
        <if test="goodsPress != null and goodsPress != ''">
            and goods_press like concat('%', #{goodsPress}, '%')
        </if>
        <if test="goodsStateId != null and goodsStateId != ''">
            and goods_state_id like concat('%', #{goodsStateId}, '%')
        </if>
        order by a.update_time desc
    </select>

    <!--修改商品状态-->
    <update id="updateGoodsShelfState" parameterType="java.util.List">
        <foreach collection="listUpdate" item="item" index="index" open="" separator=";" close="">
            update t_info_goods
            <set>
                goods_state_id = #{item.goodsStateId,jdbcType=VARCHAR},
                update_time = now(),
                update_user = #{item.updateUser,jdbcType=VARCHAR},
                version = version + 1
            </set>
            <where>
                goods_id = #{item.goodsId,jdbcType=VARCHAR}
                AND version = #{item.version}
            </where>
        </foreach>
    </update>

    <!--商品分类列表-->
    <select id="listGoodsClassify" parameterType="com.xzsd.pc.goodSort.entity.GoodSortInfo"
            resultType="com.xzsd.pc.goodSort.entity.GoodSortInfo">
        select
            classify_id classifyId,
            classify_name classifyName
        from
        t_info_goods_classify
        where is_delete = 0
        and classify_parent = #{classifyId}
        order by update_time desc
    </select>
</mapper>