<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xzsd.pc.order.dao.OrderDao">


    <!--订单列表-->
    <select id="listOrderPage" parameterType="com.xzsd.pc.order.entity.OrderInfo"
            resultType="com.xzsd.pc.order.entity.OrderInfo">
        select
            a.order_id orderId,
            a.order_all_cost orderPrice,
            a.order_state orderStateId,
            a.store_id storeId,
            b.user_name userName,
            b.phone phone,
            a.pay_time payTime,
            a.version
        from t_info_order a,
             t_sys_user b
        where a.is_delete = 0
        and a.user_id = b.user_id
        <if test="userName != null and userName != ''">
            and b.user_name like concat('%', #{userName}, '%')
        </if>
        <if test="phone != null and phone != ''">
            and b.phone like concat('%', #{phone}, '%')
        </if>
        <if test="orderId != null and orderId != ''">
            and order_id like concat('%', #{orderId}, '%')
        </if>
        <if test="orderStateId != null and orderStateId != ''">
            and a.order_state like concat('%', #{orderStateId}, '%')
        </if>
        <if test="beginTime != null and beginTime !=''">
            and to_char(a.create_time,'yyyy-MM-dd') &gt;=  #{beginTime}
        </if>
        <if test="endTime != null and endTime !=''">
            and to_char(a.create_time,'yyyy-MM-dd') &lt;=  #{endTime}
        </if>
        order by a.update_time desc
    </select>

    <!--店长订单列表-->
    <select id="listOrderPages" parameterType="com.xzsd.pc.order.entity.OrderInfo"
            resultType="com.xzsd.pc.order.entity.OrderInfo">
        select
        a.order_id orderId,
        a.order_all_cost orderPrice,
        a.order_state orderStateId,
        a.store_id storeId,
        c.user_name userName,
        c.phone phone,
        a.pay_time payTime,
        a.version
        from t_info_order a,
            t_info_store b,
            t_sys_user c
        where is_delete = 0
        and a.store_id = b.store_id
        and b.user_id = #{nowUserId}
        <if test="userName != null and userName != ''">
            and b.user_name like concat('%', #{userName}, '%')
        </if>
        <if test="phone != null and phone != ''">
            and b.phone like concat('%', #{phone}, '%')
        </if>
        <if test="orderId != null and orderId != ''">
            and order_id like concat('%', #{orderId}, '%')
        </if>
        <if test="orderStateId != null and orderStateId != ''">
            and a.order_state like concat('%', #{orderStateId}, '%')
        </if>
        <if test="beginTime != null and beginTime !=''">
            and to_char(a.create_time,'yyyy-MM-dd') &gt;=  #{beginTime}
        </if>
        <if test="endTime != null and endTime !=''">
            and to_char(a.create_time,'yyyy-MM-dd') &lt;=  #{endTime}
        </if>
        order by a.update_time desc
    </select>

    <!--修改订单状态-->
    <update id="updateOrderState" parameterType="java.util.List">
        <foreach collection="listUpdate" item="item" index="index" open="" separator=";" close="">
            update t_info_order
            <set>
                order_state = #{item.orderState},
                update_time = now(),
                update_user = #{item.updateUser,jdbcType=VARCHAR},
                version = version + 1
            </set>
            <where>
                order_id = #{item.orderId,jdbcType=VARCHAR}
                AND version = #{item.version}
            </where>
        </foreach>
    </update>

    <!--获取订单详情信息-->
    <select id="getListOrder" parameterType="java.lang.String" resultType="com.xzsd.pc.order.entity.OrderDeepenInfo">
        select
            a.user_id userId,
            a.order_id orderId,
            b.goods_id goodsId,
            c.goods_name goodsName,
            b.goods_count goodsCount,
            b.the_goods_all_price theGoodsAllPrice,
            c.goods_price goodsPrice,
            c.goods_original_cost goodsShelfCost
        from t_info_order a,
             t_info_order_deepen b,
             t_info_goods c
        where a.order_id = b.order_id
        and   b.goods_id = c.goods_id
        and a.is_delete = 0
        and b.is_delete = 0
        and c.is_delete = 0
        and a.order_id = #{orderId}
    </select>

</mapper>