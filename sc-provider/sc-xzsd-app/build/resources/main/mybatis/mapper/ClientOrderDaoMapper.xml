<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xzsd.app.clientOrder.dao.ClientOrderDao">
    <!--获取店铺邀请码-->
    <select id="getInviteCode" parameterType="com.xzsd.app.clientOrder.entity.ClientOrderInfo" resultType="java.lang.String">
        select
            invite_code
        from t_info_client
        where is_delete = 0
        and user_id = #{userId}
    </select>

    <!--获取商品库存-->
    <select id="getInventory" parameterType="java.util.List" resultType="com.xzsd.app.clientOrder.entity.GoodsInfo">
        select
            goods_id goodsId,
            goods_inventory goodsInventory,
            goods_name goodsName,
            goods_state_id goodsStateId
        from t_info_goods
        where is_delete = 0
        and goods_id in
        <foreach item="item" index="index" collection="listGoodsId" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <!--增加数据到订单表-->
    <insert id="addOrder" parameterType="com.xzsd.app.clientOrder.entity.ClientOrderInfo">
        insert into t_info_order(
            order_id,
            user_id,
            order_all_cost,
            order_all_goods_count,
            order_state,
            store_id,
            pay_time,
            is_delete,
            create_time,
            create_user,
            version
        )
        values (
            #{orderId},
            #{userId},
            #{orderAllCost},
            #{orderAllGoodsCount},
            0,
            #{storeId},
            now(),
            0,
            now(),
            #{userId},
            0
        )
    </insert>

    <!--增加数据到订单明细表-->
    <insert id="addOrders" parameterType="java.util.List">
        insert into t_info_order_deepen(
        order_goods_id,
        order_id,
        goods_id,
        goods_count,
        the_goods_all_price,
        is_delete,
        create_time,
        create_user,
        version
        )
        values
        <foreach item="item" index="index" collection="clientOrderInfoList" open="" separator="," close="">
            (#{item.orderGoodsId, jdbcType=VARCHAR},
            #{item.orderId, jdbcType=VARCHAR},
            #{item.goodsId, jdbcType=VARCHAR},
            #{item.clientGoodsNum},
            #{item.theGoodsAllPrice},
            0,
            now(),
            #{item.userId, jdbcType=VARCHAR},
            0)
        </foreach>
    </insert>

    <!--更新商品库存,销售量,商品状态-->
    <update id="update" parameterType="com.xzsd.app.clientOrder.entity.GoodsInfo">
        update t_info_goods
        set
        <if test="goodsStateId == 0">
            goods_state_id = #{goodsStateId},
        </if>
        goods_inventory = #{goodsInventory},
        goods_sales = goods_sales + #{cartGoodsCount},
        update_user = #{userId},
        update_time = now(),
        version = version + 1
        where is_delete = 0
        and goods_id = #{goodsId}
    </update>

    <!--修改订单状态-->
    <update id="updateOrderState" parameterType="com.xzsd.app.clientOrder.entity.ClientOrderInfo">
        update t_info_order
        set
            order_state = #{orderStateId},
            update_user = #{userId},
            update_time = now(),
            version = version + 1
        where order_id = #{orderId}
    </update>
    <!--取消订单获取订单详情信息-->
    <select id="getDeepen" parameterType="java.util.List" resultType="com.xzsd.app.clientOrder.entity.GoodsInfo">
        select
        b.goods_id goodsId,
        b.goods_count cartGoodsCount,
        a.goods_state_id goodsStateId
        from t_info_goods a,
             t_info_order_deepen b
        where is_delete = 0
        and a.goods_id = b.goods_id
        and b.order_id in
        <foreach item="item" index="index" collection="listOrderId" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>
    <!--取消订单时更新商品库存,销售量,商品状态-->
    <update id="backUpdate" parameterType="java.util.List">
        <foreach collection="listDeepen" item="item" index="index" open="" separator=";" close="">
            update t_info_goods
            <set>
                <if test="goodsStateId == 1">
                    goods_state_id = #{goodsStateId,jdbcType=VARCHAR},
                </if>
                goods_inventory = goods_inventory + #{cartGoodsCount},
                goods_sales = goods_sales - #{cartGoodsCount},
                update_user = #{userId,jdbcType=VARCHAR},
                update_time = now(),
                version = version + 1
            </set>
            <where>
                is_delete = 0
                and goods_id = #{goodsId,jdbcType=VARCHAR}
            </where>
        </foreach>
    </update>

    <!--查询订单评价列表-->
    <select id="listGoodsForEvaluate" parameterType="java.lang.String"
            resultType="com.xzsd.app.clientOrder.entity.GoodsInfo">
        select
        a.goods_id goodsId,
        b.goods_image_path goodsImagePath
        from t_info_order_deepen a,
             t_info_goods b
        where a.goods_id = b.goods_id
        and a.order_id = #{orderId}
        and a.is_delete = 0
    </select>

    <!--查询订单列表-->
    <select id="getListCustomerOrder" parameterType="com.xzsd.app.clientOrder.entity.ClientOrderInfo"
            resultType="com.xzsd.app.clientOrder.entity.ClientOrderInfo">
        select
        distinct
        t1.order_id as orderId,
        t1.order_state as orderStateId,
        t1.order_all_cost as orderAllCost,
        t1.order_all_goods_count as orderAllGoodsCount,
        t1.version as version
        from t_info_order t1,
             t_info_order_deepen t2,
             t_info_goods t3,
             t_sys_user t4
        where t1.order_id = t2.order_id
        and t2.goods_id = t3.goods_id
        and t1.user_id = t4.user_id
        and t1.user_id = #{userId}
        and t1.is_delete = 0
        and t2.is_delete = 0
        <if test="orderStateId != null and orderStateId != ''">
            and t1.order_state = #{orderStateId}
        </if>
    </select>
    <!--查询订单列表下的商品-->
    <select id="getListOrderGoods" parameterType="com.xzsd.app.clientOrder.entity.ClientOrderInfo"
            resultType="com.xzsd.app.clientOrder.entity.GoodsInfo">
        select
        t3.goods_name as goodsName,
        t3.goods_image_path as goodsImagePath,
        t3.goods_describe as goodsDescribe,
        t3.goods_price as goodsPrice,
        t3.goods_id as goodsId,
        t2.goods_count as cartGoodsCount,
        t2.order_id as orderId
        from t_info_order t1,
             t_info_order_deepen t2,
             t_info_goods t3
        where t2.goods_id = t3.goods_id
        and t1.user_id = #{userId}
        and t1.order_id = t2.order_id
        and t2.is_delete = 0
        and t3.is_delete = 0
    </select>
    <!--查询订单详情映射-->
    <resultMap id="orderDetailsById" type="com.xzsd.app.clientOrder.entity.ClientOrderInfo">
        <id column="orderId" property="orderId"/>
        <result column="orderStateId" property="orderStateId"/>
        <result column="orderAllGoodsCount" property="orderAllGoodsCount"/>
        <result column="orderAllCost" property="orderAllCost"/>
        <result column="crateTime" property="crateTime"/>
        <result column="storeName" property="storeName"/>
        <result column="address" property="address"/>
        <result column="provinceName" property="provinceName"/>
        <result column="cityName" property="cityName"/>
        <result column="areaName" property="areaName"/>
        <result column="version" property="version"/>
        <collection property="goodsList" ofType="com.xzsd.app.clientOrder.entity.GoodsInfo">
            <id column="goodsId" property="goodsId"/>
            <result column="goodsName" property="goodsName"/>
            <result column="goodsPrice" property="goodsPrice"/>
            <result column="goodsImagePath" property="goodsImagePath"/>
            <result column="cartGoodsCount" property="cartGoodsCount"/>
            <result column="goodsDescribe" property="goodsDescribe"/>
        </collection>
    </resultMap>
    <!--查询订单详情-->
        <select id="listOrderDeepen" parameterType="java.lang.String" resultMap="orderDetailsById">
        select
        t1.order_id as orderId,
        t1.order_state as orderStateId,
        t1.order_all_cost as orderAllGoodsCount,
        t1.order_all_goods_count as orderAllCost,
        t1.create_time as crateTime,
        t2.goods_count as cartGoodsCount,
        t3.goods_id as goodsId,
        t3.goods_name as goodsName,
        t3.goods_price as goodsPrice,
        t3.goods_image_path as goodsImagePath,
        t3.goods_describe as goodsDescribe,
        t4.store_name as storeName,
        t4.address as address,
        t5.area_name as provinceName,
        t6.area_name as cityName,
        t7.area_name as areaName,
        t1.version as version
        from t_info_order t1
        left join t_info_order_deepen t2 on (t1.order_id = t2.order_id)
        left join t_info_goods t3 on t2.goods_id = t3.goods_id
        left join t_info_store t4 on t1.store_id = t4.store_id
        left join t_info_area_level t5 on t4.province_id = t5.area_id
        left join t_info_area_level t6 on t4.city_id = t6.area_id
        left join t_info_area_level t7 on t4.area_id = t7.area_id
        where t1.order_id = #{orderId}
        and t1.is_delete = 0
        and t2.is_delete = 0
    </select>

    <!--查询订单评价列表-->
    <select id="getListOrderEvaluation" parameterType="java.lang.String"
            resultType="com.xzsd.app.clientOrder.entity.GoodsInfo">
        select
        a.goods_id goodsId,
        b.goods_image goodsImagePath
        from t_order_details a,
            t_goods_info b
        where a.goods_id = b.goods_id
        and a.order_id = #{orderId}
        and a.is_delete = 0
    </select>

    <!--新增订单商品评价-->
    <insert id="addGoodsEvaluate" parameterType="java.util.List" >
        <foreach collection="evaluateList" item="item" index="i" open="" separator=";" close=";">
            insert into t_info_goods_evaluate(
                evaluate_id,
                evaluate_score,
                evaluate_content,
                user_id,
                goods_id,
                is_delete,
                create_time,
                create_user,
                update_time,
                update_user,
                version
            )
            VALUES(
                #{item.evaluateId},
                #{item.evaluateScore},
                #{item.evaluateContent},
                #{item.userId},
                #{item.goodsId},
                0,
                NOW(),
                #{item.userId},
                NOW(),
                #{item.userId},
                0 )
        </foreach>
    </insert>
    <!--修改已评价订单状态-->
    <update id="updateOrderStates" parameterType="java.lang.String">
        update t_info_order
        set
            order_state = 5,
            update_time = now(),
            version = version + 1
        where order_id = #{orderId}
    </update>
    <!--更新评价成功相关信息-->
    <update id="updateEvaluateState" parameterType="java.lang.String">
        UPDATE t_info_order
        SET
        order_state_id = 5,
        update_time = NOW(),
        update_user = #{updateUser},
        version = version + 1
        WHERE
        order_id = #{orderId}
        <foreach collection="goodsIds" item="item" index="index" open=";" separator=";" close=";">
            UPDATE t_info_goods
            SET
            goods_evaluate_score = (SELECT avg(evaluate_score) FROM t_info_goods_evaluate WHERE goods_id = #{item})
            WHERE
            goods_id = #{item}
        </foreach>
    </update>

    <!--删除购物车-->
    <update id="deleteShoppingCart" parameterType="java.lang.String">
        update t_info_shopping_cart
        set
        is_delete = 1,
        update_user = #{userId},
        update_time = now(),
        version = version + 1
        where shop_cart_id in
        <foreach item="item" index="index" collection="listShopCartId" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>
</mapper>